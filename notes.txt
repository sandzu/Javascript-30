takeaways

1: use classes to animate and use element.classList.add('active') or
element.classList.remove('active')
  use the transitionend event to apply end-of-transition mutations
  (like changing classList to remove active)

3. domElement.dataset? ?
   domElement.style.setProperty ??

5. domElement.classList.toggle //gives the class if it doesn't have it, and vice versa
  suppose f is a function called by an event handler.
    this => domElement
    e => the event

6. use fetch(endpoint).then(callback) to hit apis
    domElement.innerHTML sets innerhtml

7. Array.some ?
    Array.every ?\
    Array.findIndex

    Array.slice !

8. i like this structure (using isDrawing boolean)

13. debounce- prevent repetitive function calls from slowing down performance
  check out stuff like window.scrollY, element.offsetHeight, element.innerHeight
14.
  arr.slice => shallow copy
  [].concat(arr) => also shallow copy (note concat does not change original array, result must be stored)

15.
  note to self: look into localStorage- looks like some json
  why is e.target.querySelector needed? why not just use e.target?
  what is domElement.matches?

16.
  did I mention domElement.style.specificStyleName can be used to change specific style? 
17.
  navigator.mediaDevices.getUserMedia to access webcam
  https://tympanus.net/codrops/2011/11/24/top-10-reasons-to-use-html5-right-now/
  ^ just check this shit out. 

22.
domElement.getBoundingClientRect() gives a domRect object representing the
css border boces associated with the element

window.scrollX / scrollY gives access to scroll coords
domElement.style.transform

23. speechSynthesis is the controller interface for the web speech api speech service (duh)
24. when an elements position changes to fixed it no longer takes space in the document
domElement.offsetTop // relative distance to the top of the node parent
